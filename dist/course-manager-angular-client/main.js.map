{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-enrollment/course-enrollment.component.css","webpack:///./src/app/course-enrollment/course-enrollment.component.html","webpack:///./src/app/course-enrollment/course-enrollment.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/detail-submission-view/detail-submission-view.component.css","webpack:///./src/app/detail-submission-view/detail-submission-view.component.html","webpack:///./src/app/detail-submission-view/detail-submission-view.component.ts","webpack:///./src/app/essay-question/essay-question.component.css","webpack:///./src/app/essay-question/essay-question.component.html","webpack:///./src/app/essay-question/essay-question.component.ts","webpack:///./src/app/fill-blanks-question/fill-blanks-question.component.css","webpack:///./src/app/fill-blanks-question/fill-blanks-question.component.html","webpack:///./src/app/fill-blanks-question/fill-blanks-question.component.ts","webpack:///./src/app/login-user/login-user.component.css","webpack:///./src/app/login-user/login-user.component.html","webpack:///./src/app/login-user/login-user.component.ts","webpack:///./src/app/model/course.model.client.ts","webpack:///./src/app/model/user.model.client.ts","webpack:///./src/app/multiple-choice-question/multiple-choice-question.component.css","webpack:///./src/app/multiple-choice-question/multiple-choice-question.component.html","webpack:///./src/app/multiple-choice-question/multiple-choice-question.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/quiz-list/quiz-list.component.css","webpack:///./src/app/quiz-list/quiz-list.component.html","webpack:///./src/app/quiz-list/quiz-list.component.ts","webpack:///./src/app/quiz-submission/quiz-submission.component.css","webpack:///./src/app/quiz-submission/quiz-submission.component.html","webpack:///./src/app/quiz-submission/quiz-submission.component.ts","webpack:///./src/app/quiz-taker/quiz-taker.component.css","webpack:///./src/app/quiz-taker/quiz-taker.component.html","webpack:///./src/app/quiz-taker/quiz-taker.component.ts","webpack:///./src/app/register-user/register-user.component.css","webpack:///./src/app/register-user/register-user.component.html","webpack:///./src/app/register-user/register-user.component.ts","webpack:///./src/app/section/section.component.css","webpack:///./src/app/section/section.component.html","webpack:///./src/app/section/section.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/quiz.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/true-false-question/true-false-question.component.css","webpack:///./src/app/true-false-question/true-false-question.component.html","webpack:///./src/app/true-false-question/true-false-question.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <button (click)=\\\"home()\\\"\\n            class=\\\"btn btn-primary btn-success\\\">\\n      Home\\n    </button>\\n\\n    <button (click)=\\\"logout()\\\"\\n            class=\\\"btn btn-primary btn-danger\\\">\\n      Logout\\n    </button>\\n  </div>\\n  <br/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\n        <li [ngClass]=\\\"{'active': course.id == courseId}\\\" *ngFor=\\\"let course of courses\\\"\\n            class=\\\"list-group-item wbdv\\\">\\n          <a routerLink=\\\"/course/{{course.id}}/section\\\">\\n            {{course.title}}</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <app-section></app-section>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Course} from '../model/course.model.client';\nimport {User} from '../model/user.model.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {UserServiceCleint} from '../services/user.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  courseId;\n  courses: Course[] = [];\n  enrolledCourses: Course[] = [];\n  otherCourses: Course[] = [];\n  user: User = new User();\n  sections = [];\n\n  constructor(private service: CourseServiceClient,\n              private userService: UserServiceCleint,\n              private sectionService: SectionServiceClient,\n              private route: ActivatedRoute,\n              private normalrouter: Router) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n  }\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n\n        this.userService.profile()\n          .then(user => {\n            this.user = user;\n            this.userService.findUserById(user._id)\n              .then(newuser => {\n                this.user = newuser;\n              });\n          });\n        this.sectionService\n          .findSectionsForStudent()\n          .then(sections => {\n            this.sections = sections;\n\n            for (let i = 0; i < this.courses.length; i++) {\n              for (let j = 0; j < this.sections.length; j++) {\n                console.log(this.sections[j]);\n                if (this.sections[j].section.courseId === this.courses[i].id) {\n                  this.enrolledCourses.push(this.courses[i]);\n                } else {\n                  this.otherCourses.push(this.courses[i]);\n                }\n              }\n            }// end of fr\n          });\n      });\n  }\n\n\n  logout() {\n    this.userService\n      .logout()\n      .then(() => this.normalrouter.navigate(['login']));\n  }\n\n  home() {\n    this.normalrouter.navigate(['home']);\n  }1\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'course-manager-angular-client';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {Routing} from './app.routing';\nimport {AppComponent} from './app.component';\nimport {WhiteBoardComponent} from './white-board/white-board.component';\nimport {CourseNavigatorServiceClient} from './services/course-navigator.service.client';\nimport {CourseServiceClient} from './services/course.service.client';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport {UserServiceCleint} from './services/user.service.client';\nimport {SectionServiceClient} from './services/section.service.client';\nimport {FormsModule} from '@angular/forms';\nimport {RegisterUserComponent} from './register-user/register-user.component';\nimport {AdminComponent} from './admin/admin.component';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SectionComponent } from './section/section.component';\nimport { CourseEnrollmentComponent } from './course-enrollment/course-enrollment.component';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { QuizListComponent } from './quiz-list/quiz-list.component';\nimport { QuizTakerComponent } from './quiz-taker/quiz-taker.component';\nimport { EssayQuestionComponent } from './essay-question/essay-question.component';\nimport { FillBlanksQuestionComponent } from './fill-blanks-question/fill-blanks-question.component';\nimport { MultipleChoiceQuestionComponent } from './multiple-choice-question/multiple-choice-question.component';\nimport { TrueFalseQuestionComponent } from './true-false-question/true-false-question.component';\nimport {QuizServiceClient} from './services/quiz.service.client';\nimport { QuizSubmissionComponent } from './quiz-submission/quiz-submission.component';\nimport { DetailSubmissionViewComponent } from './detail-submission-view/detail-submission-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WhiteBoardComponent,\n    RegisterUserComponent,\n    AdminComponent,\n    LoginUserComponent,\n    ProfileComponent,\n    SectionComponent,\n    CourseEnrollmentComponent,\n    CourseViewerComponent,\n    QuizListComponent,\n    QuizTakerComponent,\n    EssayQuestionComponent,\n    FillBlanksQuestionComponent,\n    MultipleChoiceQuestionComponent,\n    TrueFalseQuestionComponent,\n    QuizSubmissionComponent,\n    DetailSubmissionViewComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    Routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    WidgetServiceClient,\n    UserServiceCleint,\n    QuizServiceClient,\n    SectionServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Routes, RouterModule} from '@angular/router';\nimport {WhiteBoardComponent} from './white-board/white-board.component';\nimport {RegisterUserComponent} from './register-user/register-user.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {LoginUserComponent} from './login-user/login-user.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionComponent} from './section/section.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {QuizListComponent} from './quiz-list/quiz-list.component';\nimport {QuizTakerComponent} from './quiz-taker/quiz-taker.component';\nimport {QuizSubmissionComponent} from './quiz-submission/quiz-submission.component';\nimport {DetailSubmissionViewComponent} from './detail-submission-view/detail-submission-view.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: WhiteBoardComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'login', component: LoginUserComponent},\n  {path: 'course/:courseId/section', component: AdminComponent},\n  {path: 'register', component: RegisterUserComponent},\n  {path: 'profile', component: ProfileComponent},\n  { path: 'enroll/course/:courseId/section', component: SectionComponent },\n  { path: 'course', component: CourseViewerComponent },\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\n  { path: 'quizzes', component: QuizListComponent },\n  { path: 'quiz/:quizId', component: QuizTakerComponent },\n  { path: 'quiz/:quizId/submission/:submissionId', component: DetailSubmissionViewComponent},\n  { path: 'quiz/:quizId/submissions', component: QuizSubmissionComponent},\n  {path: '**', component: WhiteBoardComponent}\n];\nexport const Routing = RouterModule.forRoot(appRoutes);\n","module.exports = \"\"","module.exports = \"<h1>Course Enrollment </h1>\\n<hr/>\\n<h2>Enrolled Courses </h2>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of enrolledCourses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p>Course description, right now contains some garbage value</p>\\n        <a routerLink=\\\"/enroll/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-warning\\\">Un-Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<hr/>\\n<h2>Other Courses</h2>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of otherCourses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p>Course description, right now contains some garbage value</p>\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-warning\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Course} from '../model/course.model.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {UserServiceCleint} from '../services/user.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {User} from '../model/user.model.client';\n\n@Component({\n  selector: 'app-course-enrollment',\n  templateUrl: './course-enrollment.component.html',\n  styleUrls: ['./course-enrollment.component.css']\n})\nexport class CourseEnrollmentComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private userService: UserServiceCleint,\n              private sectionService: SectionServiceClient) {\n  }\n\n  courses: Course[] = [];\n  enrolledCourses: Course[] = [];\n  otherCourses: Course[] = [];\n  user: User = new User();\n  sections = [];\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n\n        this.userService.profile()\n          .then(user => {\n            this.user = user;\n            this.userService.findUserById(user._id)\n              .then(newuser => {\n                this.user = newuser;\n                console.log('user');\n                console.log(this.user);\n              });\n            this.sectionService\n              .findSectionsForStudent()\n              .then(sections => {\n                this.sections = sections;\n                if (sections.length === 0) {\n                  this.otherCourses = this.courses;\n                } else {\n                  for (let i = 0; i < this.courses.length; i++) {\n                    for (let j = 0; j < this.sections.length; j++) {\n                      console.log(this.sections[j]);\n                      if (this.sections[j].section.courseId === this.courses[i].id) {\n                        this.enrolledCourses.push(this.courses[i]);\n                      } else {\n                        this.otherCourses.push(this.courses[i]);\n                        break;\n                      }\n                    }\n                  }\n                }\n              });\n          });\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <button (click)=\\\"home()\\\"\\n          class=\\\"btn btn-primary btn-success\\\">\\n    Home\\n  </button>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\">\\n      <h2>Courses</h2>\\n      <ul class=\\\"list-group\\\">\\n        <li [ngClass]=\\\"{'active': course.id == courseId}\\\" *ngFor=\\\"let course of courses\\\"\\n            class=\\\"list-group-item \\\" (click)=\\\"loadModules(course.id)\\\">\\n          <!--<a routerLink=\\\"/course/{{course.id}}\\\">-->\\n            {{course.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <h2>Modules</h2>\\n      <ul class =\\\"list-group\\\">\\n        <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n            class=\\\"list-group-item\\\" (click)=\\\"loadLessons(courseId,module.id)\\\">\\n          <!--<a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">-->\\n            {{module.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <h2>Lessons</h2>\\n      <ul class=\\\"list-group\\\">\\n        <li  *ngFor=\\\"let lesson of lessons\\\" [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n             class=\\\"list-group-item\\\" (click)=\\\"loadTopics(courseId,moduleId,lesson.id)\\\">\\n          <!--<a class=\\\"list-group-item\\\" [ngClass]=\\\"{'active': lesson.id == lessonId}\\\" routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">-->\\n            {{lesson.title}}\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col-2\\\">\\n      <h2>Topics</h2>\\n      <ul class=\\\"list-group\\\">\\n        <li  *ngFor=\\\"let topic of topics\\\" [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\n             class=\\\"list-group-item\\\" (click)=\\\"loadWidgets(courseId,moduleId,lessonId,topic.id)\\\">\\n          <!--<a class=\\\"list-group-item\\\" [ngClass]=\\\"{'active': topic.id == topicId}\\\" routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">-->\\n            {{topic.title}}\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col-3\\\">\\n      <h2>Widgets</h2>\\n    <div class=\\\"row\\\" *ngFor=\\\"let widget of widgets\\\">\\n      <div [ngSwitch]=\\\"widget.widgetType\\\">\\n        <div *ngSwitchCase=\\\"'Heading'\\\">\\n          <div [ngSwitch]=\\\"widget.size\\\">\\n            <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n            <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n            <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n            <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n            <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n            <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n          </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"'Link'\\\">\\n          <a href=\\\"{{widget.linkHref}}\\\">{{widget.text}}</a>\\n        </div>\\n        <div *ngSwitchCase=\\\"'List'\\\">\\n          <h1>ListWidget</h1>\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\"\\n                *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n              {{item}}\\n            </li>\\n          </ul>\\n        </div>\\n        <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n          <h1>Paragraph Widget</h1>\\n          <p>{{widget.text}}</p>\\n        </div>\\n        <div *ngSwitchCase=\\\"'Image'\\\">\\n          <h1>Image Widget</h1>\\n          <img className=\\\"rounded card-img\\\" src={widget.imageSrc} alt={widget.widgetName} />\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../model/course.model.client';\nimport {CourseNavigatorServiceClient} from '../services/course-navigator.service.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseNavigatorServiceClient,\n              private route: ActivatedRoute,\n              private normalrouter: Router) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n  lessons = [];\n  topics = [];\n  courses = [];\n  modules = [];\n  widgets = [];\n  course: Course = new Course();\n\n\n  setParams(params) {\n    // this.courseId = params['courseId'];\n    // this.moduleId = params['moduleId'];\n    // this.lessonId = params['lessonId'];\n    // this.topicId = params['topicId'];\n    // this.loadCourses();\n    // this.loadModules(this.courseId);\n    // this.loadLessons(this.courseId, this.moduleId);\n    // this.loadTopics(this.courseId, this.moduleId, this.lessonId);\n  }\n\n  loadCourses() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findAllModulesForCourses(courseId)\n      .then(modules => this.modules = modules);\n\n  }\n\n  loadLessons(courseId, moduleId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    console.log(moduleId);\n    this.service.findAllLessonsForModule(courseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  loadTopics(courseId, moduleId, lessonId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    this.lessonId = lessonId;\n    console.log(moduleId);\n    this.service.findAllTopicsForLesson(courseId, moduleId, lessonId)\n      .then(topics => this.topics = topics);\n  }\n\n  loadWidgets(courseId, moduleId, lessonId, topicId) {\n    this.topicId = topicId;\n    console.log('test topic id:' + topicId);\n    this.service.findAllWidgets(courseId, moduleId, lessonId, topicId)\n      .then(widgets => {\n        this.widgets = widgets;\n        console.log(widgets);\n      });\n  }\n\n\n  home() {\n    this.normalrouter.navigate(['home']);\n  }\n\n  ngOnInit() {\n    this.loadCourses();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Submission for the Quiz</h2>\\n\\n  <button class=\\\"btn btn-primary float-right\\\" routerLink=\\\"/home\\\">Home </button>\\n\\n<p><strong>Quiz id </strong> is: {{quiz.title}}</p>\\n<p><strong>Student id </strong> is: {{submission.student}}</p>\\n<p><strong>Submission Time</strong>  is: {{submission.submissionTime}}</p>\\n\\n<ul class=\\\"list-group\\\">\\n  <li *ngFor=\\\"let answer of submission.answers\\\" class=\\\"list-group-item\\\">\\n    <div *ngFor=\\\"let question of quiz.questions\\\"> <p *ngIf=\\\"answer._id == question._id\\\"><strong>Question </strong> is: {{question.title}}</p></div>\\n    <p *ngIf=\\\"answer.essayAnswer != null\\\"> <strong>Essay Answer</strong> is:      {{answer.essayAnswer}} </p>\\n    <p *ngIf=\\\"answer.multipleChoiceAnswer != null\\\"> <strong>MultipleChoiceAnswer</strong> is: {{answer.multipleChoiceAnswer}} </p>\\n    <p *ngIf=\\\"answer.trueFalseAnswer != null\\\"> <strong>True False Answer</strong> is: {{answer.trueFalseAnswer}} </p>\\n    <p *ngIf=\\\"answer.fillBlanksAnswers != null\\\"> <strong>Fill Blanks Answer for Variable 1</strong> is: {{answer.fillBlanksAnswers.variable1}}\\n      <br/>\\n      <strong>Fill Blanks Answer for Variable 2</strong> is: {{answer.fillBlanksAnswers.variable2}}\\n    </p>\\n  </li>\\n</ul>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {QuizServiceClient} from '../services/quiz.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-detail-submission-view',\n  templateUrl: './detail-submission-view.component.html',\n  styleUrls: ['./detail-submission-view.component.css']\n})\nexport class DetailSubmissionViewComponent implements OnInit {\n\n  quizId;\n  submissionId;\n  quiz = {};\n  submission = {};\n\n  constructor(\n    private service: QuizServiceClient,\n    private aRoute: ActivatedRoute) {\n    aRoute.params.subscribe(params => this.setParams(params));\n  }\n\n  setParams(params) {\n    this.quizId = params['quizId'];\n    this.submissionId = params['submissionId'];\n    this.loadDetailSubmission(this.quizId, this.submissionId);\n    this.loadQuiz(this.quizId);\n  }\n\n  loadQuiz(quizId) {\n    this.service.findQuizById(quizId).then(quiz => this.quiz = quiz);\n  }\n\n  loadDetailSubmission(quizId, submissionId) {\n\n    this.service.loadDetailSubmission(quizId, submissionId).then((submission) => {\n        this.submission = submission[0];\n        console.log(this.submission);\n      }\n    );\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<textarea [(ngModel)]=\\\"question.essayAnswer\\\" class=\\\"form-control\\\"></textarea>\\n\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-essay-question',\n  templateUrl: './essay-question.component.html',\n  styleUrls: ['./essay-question.component.css']\n})\nexport class EssayQuestionComponent implements OnInit {\n\n  @Input() question;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"  <span [ngSwitch]=\\\"blank.indexOf('*')\\\" *ngFor=\\\"let blank of question.blanks\\\">\\n  <span *ngSwitchCase=\\\"-1\\\">{{blank}}</span>\\n  <span *ngSwitchCase=\\\"0\\\">\\n    <input [(ngModel)]=\\\"question.fillBlanksAnswers[blank.split('=')[0].replace('*','')]\\\"\\n           placeholder=\\\"{{blank.split('=')[0].replace('*','')}}\\\"\\n           style=\\\"border-color:black\\\">\\n  </span>\\n</span>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fill-blanks-question',\n  templateUrl: './fill-blanks-question.component.html',\n  styleUrls: ['./fill-blanks-question.component.css']\n})\nexport class FillBlanksQuestionComponent implements OnInit {\n\n  @Input() question;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.question.fillBlanksAnswers = {};\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n  <br/>\\n\\n  <div>\\n    <button (click)=\\\"home()\\\"\\n            class=\\\"btn btn-primary btn-success\\\">\\n      Home\\n    </button>\\n    <button (click)=\\\"register()\\\"\\n            class=\\\"btn btn-primary btn-primary\\\">\\n      Register\\n    </button>\\n\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceCleint} from '../services/user.service.client';\nimport {until} from 'selenium-webdriver';\nimport elementIsSelected = until.elementIsSelected;\nimport {User} from '../model/user.model.client';\n\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.css']\n})\nexport class LoginUserComponent implements OnInit {\n\n  username;\n  password;\n  user: User = new User();\n\n  constructor(private router: Router,\n              private service: UserServiceCleint) {\n  }\n\n  ngOnInit() {\n  }\n\n  home() {\n    this.router.navigate(['home']);\n  }\n\n  register() {\n    this.router.navigate(['register']);\n  }\n\n  login(username, password) {\n\n    this.service.login(username, password)\n      .then(user => {\n        console.log('login');\n        console.log(user);\n        this.user = user;\n        if (user == null) {\n          alert('Invalid Credentials, Try again!');\n        } else {\n          this.router.navigate(['profile']);\n        }\n\n      });\n\n  }\n}\n","export class Course {\n  id: number;\n  title: string;\n}\n","export class User {\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  admin: boolean;\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group\\\">\\n  <li *ngFor=\\\"let choice of question.choices\\\"\\n      class=\\\"list-group-item\\\">\\n    <label>\\n      <input (click)=\\\"selected(choice)\\\" name=\\\"{{question._id}}\\\"\\n             type=\\\"radio\\\">\\n      {{choice.text}}\\n    </label>\\n  </li>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-multiple-choice-question',\n  templateUrl: './multiple-choice-question.component.html',\n  styleUrls: ['./multiple-choice-question.component.css']\n})\nexport class MultipleChoiceQuestionComponent implements OnInit {\n\n  @Input() question;\n\n  constructor() { }\n\n  selected = choice => {\n    this.question.multipleChoiceAnswer = this.question.choices.indexOf(choice);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div>\\n    <button (click)=\\\"logout()\\\"\\n            class=\\\"btn btn-primary btn-danger\\\">\\n      Logout\\n    </button>\\n    <button (click)=\\\"home()\\\"\\n            class=\\\"btn btn-primary btn-success\\\">\\n      Home\\n    </button>\\n    <button *ngIf=\\\"user.admin\\\" (click)=\\\"admin()\\\"\\n            class=\\\"btn btn-primary btn-dark\\\">\\n      Admin\\n    </button>\\n  </div>\\n\\n  <h1>Profile</h1>\\n  <input [(ngModel)]=\\\"user.username\\\"\\n         placeholder=\\\"User Name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.password\\\"\\n         placeholder=\\\"Password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"update(user)\\\"\\n          class=\\\"btn btn-primary btn-block btn-success\\\">\\n    Update\\n  </button>\\n  <button (click)=\\\"courseNavigator()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Go to Course Navigator\\n  </button>\\n\\n\\n  <h2>Sections {{sections.length}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      {{enrollment.section.name}}\\n      ({{enrollment.section.seats}})\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserServiceCleint} from '../services/user.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {Router} from '@angular/router';\nimport {User} from '../model/user.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceCleint,\n              private sectionService: SectionServiceClient,\n              private router: Router) {\n  }\n\n  user: User = new User();\n  sections = [];\n\n  ngOnInit() {\n    this.service.profile()\n      .then(user => {\n        this.user = user;\n        console.log(user._id);\n\n\n        this.service.findUserById(user._id)\n          .then(newuser => {\n            this.user = newuser;\n            console.log('user');\n            console.log(this.user);\n          });\n      });\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => {\n        this.sections = sections;\n        console.log(sections[0].section);\n      });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() => this.router.navigate(['login']));\n  }\n\n  home() {\n    this.router.navigate(['home']);\n  }\n\n  admin() {\n    this.router.navigate(['admin']);\n  }\n\n  courseNavigator() {\n    this.router.navigate(['course']);\n  }\n\n  update(user: User) {\n    console.log(user);\n    this.service.updateProfile(user.username, user.password, user.firstName, user.lastName, user.email)\n      .then(() => console.log('update'));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Quizzes</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let quiz of quizzes\\\" class=\\\"list-group-item\\\">\\n      {{quiz.title}}\\n\\n      <a *ngIf=\\\"user.admin\\\" routerLink=\\\"/quiz/{{quiz._id}}/submissions\\\" class=\\\"btn btn-info float-right\\\">Submissions</a>\\n      <a *ngIf=\\\"!user.admin\\\" routerLink=\\\"/quiz/{{quiz._id}}\\\" class=\\\"btn btn-success float-right\\\">Take</a>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {QuizServiceClient} from '../services/quiz.service.client';\nimport {UserServiceCleint} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.css']\n})\nexport class QuizListComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private userService: UserServiceCleint) {\n  }\n\n  quizzes = [];\n  user = {};\n\n  ngOnInit() {\n    this.userService.profile().then(user => {\n      this.userService.findUserById(user._id).then(newUser => this.user = newUser)\n      console.log(this.user);\n    });\n    this.service.findAllQuizzes()\n      .then(quizzes => this.quizzes = quizzes);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Submissions</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let submission of submissions\\\" class=\\\"list-group-item\\\">\\n      <p><strong> Submission for Student with id: </strong> {{submission.student}}</p>\\n      <p>Submission time: {{submission.submissionTime}}</p>\\n\\n      <a routerLink=\\\"/quiz/{{submission.quiz}}/submission/{{submission._id}}\\\" class=\\\"btn btn-success float-right\\\">View Submission</a>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {QuizServiceClient} from '../services/quiz.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-quiz-submission',\n  templateUrl: './quiz-submission.component.html',\n  styleUrls: ['./quiz-submission.component.css']\n})\nexport class QuizSubmissionComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private aRoute: ActivatedRoute) {\n    this.aRoute.params.subscribe(params =>\n      this.loadSubmissions(params['quizId']));\n  }\n\n  quizId = '';\n  submissions = [];\n  loadSubmissions(quizId) {\n    this.quizId = quizId;\n    this.service.loadSubmissions(this.quizId)\n      .then(submissions => this.submissions = submissions);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Quiz Taker</h2>\\n\\n<h3>\\n  {{quiz.title}}\\n  <button class=\\\"btn btn-primary float-right\\\"\\n          (click)=\\\"submitQuiz(quiz)\\\">\\n    Submit\\n  </button>\\n</h3>\\n\\n<ul class=\\\"list-group\\\">\\n  <li *ngFor=\\\"let question of quiz.questions\\\" class=\\\"list-group-item\\\">\\n    <h4>\\n      {{question.title}}\\n      <span class=\\\"float-right\\\">{{question.points}}</span>\\n    </h4>\\n    <p>{{question.description}}</p>\\n    <div [ngSwitch]=\\\"question.questionType\\\">\\n\\n      <app-true-false-question\\n        [question]=\\\"question\\\"\\n        *ngSwitchCase=\\\"'TRUE_FALSE'\\\">\\n      </app-true-false-question>\\n\\n      <app-fill-blanks-question\\n        [question]=\\\"question\\\"\\n        *ngSwitchCase=\\\"'FILL_BLANKS'\\\">\\n      </app-fill-blanks-question>\\n\\n      <app-multiple-choice-question\\n        [question]=\\\"question\\\"\\n        *ngSwitchCase=\\\"'CHOICE'\\\">\\n      </app-multiple-choice-question>\\n\\n      <app-essay-question\\n        [question]=\\\"question\\\"\\n        *ngSwitchCase=\\\"'ESSAY'\\\">\\n      </app-essay-question>\\n\\n    </div>\\n  </li>\\n</ul>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {QuizServiceClient} from '../services/quiz.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserServiceCleint} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-quiz-taker',\n  templateUrl: './quiz-taker.component.html',\n  styleUrls: ['./quiz-taker.component.css']\n})\nexport class QuizTakerComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private router: Router,\n              private userService: UserServiceCleint,\n              private activatedRoute: ActivatedRoute) {\n  }\n\n  quizId = '';\n  quiz ;\n  submission = {\n    answers: []\n  };\n\n  submitQuiz = quiz => {\n    this.quiz.submissionTime = new Date();\n    this.service\n      .submitQuiz(quiz)\n      .then(submission => {\n        console.log(submission);\n        this.router.navigate(['/quiz/' + this.quiz._id + '/submission/' + submission._id]);\n      });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .subscribe(params => this.service\n        .findQuizById(params['quizId'])\n        .then(quiz => this.quiz = quiz));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <a routerLink=\\\"/home\\\">Home</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { UserServiceCleint } from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  constructor(private router: Router, private service: UserServiceCleint) { }\n\n  username;\n  password;\n  password2;\n  isAdmin = false;\n\n  ngOnInit() {\n  }\n\n  register(username, password, password2) {\n    if ( password !== password2) {\n      alert('Passwords do not match');\n    } else {\n      if ( username === 'admin' && password === 'admin') {\n        this.isAdmin = true;\n      }\n      this.service.createUser(username, password, this.isAdmin)\n        .then(() => this.router.navigate(['profile']));\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Sections for course: {{currentCourse.title}}</h1>\\n  <div *ngIf=\\\"isAdmin\\\">\\n    <input [(ngModel)]=\\\"sectionName\\\"\\n           placeholder=\\\"Section Name\\\"\\n           class=\\\"form-control\\\"/>\\n    <input [(ngModel)]=\\\"seats\\\"\\n           placeholder=\\\"Seats\\\"\\n           class=\\\"form-control\\\"/>\\n    <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n      Add Section\\n    </button>\\n    <button (click)=\\\"editSection(sectionName, seats)\\\" class=\\\"btn btn-primary btn-block\\\">\\n      Edit and Update Section\\n    </button>\\n  </div>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} {{section.seats}}\\n      <button *ngIf=\\\"isAdmin\\\" (click)=\\\"populateField(section._id, section.name,section.seats)\\\" class=\\\"float-right btn btn-warning\\\">Edit</button>\\n      <button *ngIf=\\\"isAdmin\\\" (click)=\\\"deleteSection(section)\\\" class=\\\"float-right btn btn-danger\\\">Delete</button>\\n      <button *ngIf=\\\"!isAdmin\\\" (click)=\\\"unenroll(section)\\\" class=\\\"float-right btn btn-info\\\">UnEnroll</button>\\n      <button *ngIf=\\\"!isAdmin\\\" (click)=\\\"enroll(section)\\\" class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n  </ul>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {Router} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {UserServiceCleint} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.css']\n})\nexport class SectionComponent implements OnInit {\n\n\n  courseId = '';\n  sectionName = '';\n  seats = '';\n  sections = [];\n  isAdmin = true;\n  selectedSection;\n  currentCourse;\n  noUser = false;\n\n  constructor(private route: ActivatedRoute,\n              private sectionService: SectionServiceClient,\n              private router: Router,\n              private courseService: CourseServiceClient,\n              private userService: UserServiceCleint) {\n\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n    this.route.params.subscribe(params => {\n      this.courseId = params['courseId'];\n      this.courseService.findCourseById(this.courseId)\n        .then(course => {\n          this.currentCourse = course;\n          this.sectionName = course.title + ' Section 1';\n        });\n    });\n\n\n    this.userService.profile()\n      .then(user => {\n        console.log(user._id);\n        if (user.id == null) {\n          this.noUser = true;\n        }\n\n        this.userService.findUserById(user._id)\n          .then(newuser => {\n            this.isAdmin = newuser.admin;\n          });\n      });\n  }\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this.sectionService.findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  createSection(sectionName, seats) {\n    this.sectionService.createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  populateField(id, name, seats) {\n    this.sectionName = name;\n    this.seats = seats;\n    this.selectedSection = id;\n  }\n\n\n  enroll(section) {\n    this.sectionService.enrollStudentInSection(section._id)\n      .then(() => {\n        this.router.navigate(['profile']);\n      });\n  }\n\n\n  unenroll(section) {\n    this.sectionService.unenrollStudentInSection(section._id)\n      .then(() => {\n        this.router.navigate(['profile']);\n      });\n  }\n\n\n  deleteSection(section) {\n    this.sectionService.deleteSection(section._id)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n\n  editSection(sectionName, seats) {\n    this.sectionService.editSection(this.selectedSection, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class CourseNavigatorServiceClient {\n  findAllCourses() {\n    return fetch('https://arcane-river-53780.herokuapp.com/api/course')\n      .then(response => response.json());\n  }\n\n  findAllModulesForCourses(courseId) {\n    return fetch('https://arcane-river-53780.herokuapp.com/api/course/' + courseId + '/module')\n      .then(response => response.json());\n  }\n\n  findAllLessonsForModule(courseId, moduleId) {\n    return fetch('https://arcane-river-53780.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n\n  findAllTopicsForLesson(courseId, moduleId, lessonId) {\n    return fetch('https://arcane-river-53780.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic')\n      .then(response => response.json());\n  }\n\n  findAllWidgets(courseId, moduleId, lessonId, topicId) {\n    return fetch('https://arcane-river-53780.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic/' + topicId + '/widget')\n      .then(response => response.json());\n  }\n}\n","export class CourseServiceClient {\n  COURSE_URL = 'https://arcane-river-53780.herokuapp.com/api/course';\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class QuizServiceClient {\n\n  submitQuiz = quiz =>\n    fetch('https://young-garden-67805.herokuapp.com/api/quiz/' + quiz._id + '/submission', {\n      method: 'post',\n      body: JSON.stringify(quiz),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json',\n      }\n    })\n      .then(response => response.json());\n\n  createQuiz(quiz) {\n  }\n\n  loadDetailSubmission(quizId, submissionId) {\n    return fetch('https://young-garden-67805.herokuapp.com/api/quiz/' + quizId + '/submission/' + submissionId ,\n      {\n        method: 'get',\n        credentials: 'include',\n        headers: {\n          'content-type': 'application/json',\n        }}).then(\n      response => response.json()\n    );\n  }\n\n  loadSubmissions(quizId) {\n    return fetch('https://young-garden-67805.herokuapp.com/api/quiz/' + quizId + '/submissions')\n      .then(response => response.json());\n  }\n\n  findAllQuizzes = () =>\n    fetch('https://young-garden-67805.herokuapp.com/api/quiz')\n      .then(response => response.json());\n\n  findQuizById = quizId =>\n    fetch('https://young-garden-67805.herokuapp.com/api/quiz/' + quizId)\n      .then(response => response.json());\n\n\n}\n","export class SectionServiceClient {\n\n  SECTION_URL = 'https://young-garden-67805.herokuapp.com/api/course/COURSEID/section';\n\n  findSectionsForStudent() {\n    const url = 'https://young-garden-67805.herokuapp.com/api/student/section';\n\n    return fetch(url, {\n      credentials: 'include'\n    })\n      .then(response => response.json());\n  }\n\n  enrollStudentInSection(sectionId) {\n    const url = 'https://young-garden-67805.herokuapp.com/api/section/' + sectionId + '/enrollment';\n\n    return fetch(url, {\n      method: 'POST',\n      credentials: 'include'\n    });\n  }\n\n\n  unenrollStudentInSection(sectionId) {\n    const url = 'https://young-garden-67805.herokuapp.com/api/section/' + sectionId + '/unenrollment';\n\n    return fetch(url, {\n      method: 'POST',\n      credentials: 'include'\n    });\n  }\n\n  deleteSection(sectionId) {\n    const url = 'https://young-garden-67805.herokuapp.com/api/section/' + sectionId;\n\n    return fetch(url, {\n      method: 'DELETE',\n      credentials: 'include'\n    });\n  }\n\n  editSection(sectionId, name, seats) {\n    const url = 'https://young-garden-67805.herokuapp.com/api/section/' + sectionId;\n    const section = {name, seats};\n\n    return fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n\n  createSection(courseId, name, seats) {\n    const section = {courseId, name, seats};\n\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'POST',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class UserServiceCleint {\n\n\n  findUserById(userId) {\n    return fetch('https://young-garden-67805.herokuapp.com/api/user/' + userId, {\n      credentials: 'include', // include, same-origin, *omit\n    })\n      .then(response => response.json());\n  }\n\n  profile() {\n    return fetch('https://young-garden-67805.herokuapp.com/api/profile', {\n      credentials: 'include', // include, same-origin, *omit\n    })\n      .then(response => response.json());\n  }\n\n  createUser(username, password, admin) {\n    const user = {\n      username: username,\n      password: password,\n      admin: admin\n    };\n\n    return fetch('https://young-garden-67805.herokuapp.com/api/user', {\n      body: JSON.stringify(user),\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  logout() {\n    return fetch('https://young-garden-67805.herokuapp.com/api/logout', {\n      method: 'POST',\n      credentials: 'include',\n    });\n  }\n\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch('https://young-garden-67805.herokuapp.com/api/login', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(credentials),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n\n  updateProfile(username, password, firstname, lastname, email) {\n    const user = {\n      username: username,\n      password: password,\n      firstName: firstname,\n      lastName: lastname,\n      email: email\n    };\n    return fetch('https://young-garden-67805.herokuapp.com/api/profile', {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify(user),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n}\n","export class WidgetServiceClient {\n  findAllWidgetsForLesson(topicId) {\n    return fetch('https://arcane-river-53780.herokuapp.com/api/topic/' + 1 + '/widget')\n      .then(response => response.json());\n  }\n}\n","module.exports = \"\"","module.exports = \"<label>\\n  <input (click)=\\\"selected(true)\\\"\\n         name=\\\"{{question._id}}\\\"\\n         type=\\\"radio\\\">\\n  True\\n</label>\\n<br/>\\n<label>\\n  <input (click)=\\\"selected(false)\\\"\\n         name=\\\"{{question._id}}\\\"\\n         type=\\\"radio\\\">\\n  False\\n</label>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-true-false-question',\n  templateUrl: './true-false-question.component.html',\n  styleUrls: ['./true-false-question.component.css']\n})\nexport class TrueFalseQuestionComponent implements OnInit {\n\n  @Input() question;\n\n  constructor() { }\n\n  selected = trueOrFalse => {\n    this.question.trueFalseAnswer = trueOrFalse;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group row\\\">\\n  <h1>\\n    White Board\\n  </h1>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <button (click)=\\\"login()\\\"\\n            class=\\\"btn btn-primary btn-block\\\">\\n      Login\\n    </button>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <button (click)=\\\"register()\\\"\\n            class=\\\"btn btn-primary btn-block\\\">\\n      Register\\n    </button>\\n  </div>\\n\\n  <div *ngIf=\\\"isLoggedIn\\\" class=\\\"form-group row\\\">\\n    <button (click)=\\\"quiz()\\\"\\n            class=\\\"btn btn-success btn-block\\\">\\n      Quizzes\\n    </button>\\n  </div>\\n  <app-course-enrollment ></app-course-enrollment>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceCleint} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor(private router: Router,\n              private userService: UserServiceCleint) {\n  }\n\n  isLoggedIn = false;\n\n  ngOnInit() {\n    this.userService.profile().then(response => {\n      if (response != null) {\n        if (response.username !== 'unregistered')\n          this.isLoggedIn = true;\n      }\n    });\n  }\n\n  register() {\n    this.router.navigate(['register']);\n  }\n\n  login() {\n    this.router.navigate(['login']);\n  }\n\n  quiz() {\n    this.router.navigate(['quizzes']);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}